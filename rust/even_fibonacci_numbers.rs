// Problem:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
// first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fn main() {
    let limit: u32 = 4000000;
    println!("{}",even_fibonacci_numbers(limit));
    // 4613732
}

pub fn even_fibonacci_numbers(limit: u32) -> u32 {
    let mut a:u32 = 1;
    let mut b:u32 = 1;
    let mut next_f:u32 = a + b;
    let mut sum = 0;

    while next_f < limit {
        sum += next_f;
        a = next_f + b;
        b = next_f + a;
        next_f = a + b;
    }

    return sum;
}